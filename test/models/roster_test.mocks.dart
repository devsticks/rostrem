// Mocks generated by Mockito 5.4.4 from annotations
// in rostrem/test/models/roster_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:flutter/material.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:rostrem/models/doctor.dart' as _i3;
import 'package:rostrem/models/roster.dart' as _i2;
import 'package:rostrem/models/shift.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [Roster].
///
/// See the documentation for Mockito's code generation for more information.
class MockRoster extends _i1.Mock implements _i2.Roster {
  MockRoster() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i3.Doctor> get doctors => (super.noSuchMethod(
        Invocation.getter(#doctors),
        returnValue: <_i3.Doctor>[],
      ) as List<_i3.Doctor>);

  @override
  set doctors(List<_i3.Doctor>? _doctors) => super.noSuchMethod(
        Invocation.setter(
          #doctors,
          _doctors,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i4.Shift> get shifts => (super.noSuchMethod(
        Invocation.getter(#shifts),
        returnValue: <_i4.Shift>[],
      ) as List<_i4.Shift>);

  @override
  set shifts(List<_i4.Shift>? _shifts) => super.noSuchMethod(
        Invocation.setter(
          #shifts,
          _shifts,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, double> get hoursPerShiftType => (super.noSuchMethod(
        Invocation.getter(#hoursPerShiftType),
        returnValue: <String, double>{},
      ) as Map<String, double>);

  @override
  set hoursPerShiftType(Map<String, double>? _hoursPerShiftType) =>
      super.noSuchMethod(
        Invocation.setter(
          #hoursPerShiftType,
          _hoursPerShiftType,
        ),
        returnValueForMissingStub: null,
      );

  @override
  double get maxOvertimeHours => (super.noSuchMethod(
        Invocation.getter(#maxOvertimeHours),
        returnValue: 0.0,
      ) as double);

  @override
  set maxOvertimeHours(double? _maxOvertimeHours) => super.noSuchMethod(
        Invocation.setter(
          #maxOvertimeHours,
          _maxOvertimeHours,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get postCallBeforeLeave => (super.noSuchMethod(
        Invocation.getter(#postCallBeforeLeave),
        returnValue: false,
      ) as bool);

  @override
  set postCallBeforeLeave(bool? _postCallBeforeLeave) => super.noSuchMethod(
        Invocation.setter(
          #postCallBeforeLeave,
          _postCallBeforeLeave,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get filled => (super.noSuchMethod(
        Invocation.getter(#filled),
        returnValue: false,
      ) as bool);

  @override
  set filled(bool? _filled) => super.noSuchMethod(
        Invocation.setter(
          #filled,
          _filled,
        ),
        returnValueForMissingStub: null,
      );

  @override
  void assignShifts() => super.noSuchMethod(
        Invocation.method(
          #assignShifts,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addLeaveDays(
    _i3.Doctor? doctor,
    List<DateTime>? leaveDays,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #addLeaveDays,
          [
            doctor,
            leaveDays,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<void> retryAssignments(
    int? retries,
    _i6.ValueNotifier<double>? progressNotifier,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #retryAssignments,
          [
            retries,
            progressNotifier,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> downloadAsCsv(_i6.BuildContext? context) =>
      (super.noSuchMethod(
        Invocation.method(
          #downloadAsCsv,
          [context],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
